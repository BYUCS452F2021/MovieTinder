{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/MovieTinder/screens/SettingsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-community/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport shortid from 'shortid';\nimport { createMovieGroup } from \"../repositories/apiRepository\";\nimport { retrieveMovieListWithSelections } from \"../repositories/movieDbRepository\";\nexport var SettingsScreen = function SettingsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(route.params.data),\n      _useState2 = _slicedToArray(_useState, 2),\n      settings = _useState2[0],\n      setSettings = _useState2[1];\n\n  useEffect(function () {\n    console.log(111, settings);\n  }, []);\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, \"Movie Tinder\"), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Join Code: \", settings.code.toUpperCase()), React.createElement(Text, {\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Users \", settings.users.length), React.createElement(View, {\n    style: styles.userList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, settings.users.map(function (user) {\n    return React.createElement(View, {\n      key: user.userId,\n      style: styles.userName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, user.userName));\n  }))), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, \"Streaming Services\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, settings.streamingServices.map(function (service) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectStreamingService(service);\n      },\n      key: service.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: service.selected ? 'green' : 'grey'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, service.service));\n  }))), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }\n  }, \"Genres\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, settings.genres.map(function (genre) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectGenre(genre);\n      },\n      key: genre.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: genre.selected ? 'green' : 'grey'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, genre.name));\n  }))), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }, \"Years\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }, settings.years.map(function (year) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectYear(year);\n      },\n      key: year.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: year.selected ? 'green' : 'grey'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, year.year));\n  })))), React.createElement(View, {\n    style: styles.navigationPanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.mainButtons,\n    onPress: function onPress() {\n      navigation.navigate('SwipeScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 6\n    }\n  }, \"Go Swipe\"))));\n};\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    backgroundColor: '#FFFFFF'\n  },\n  mainTitle: {\n    flexDirection: 'row',\n    fontSize: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 35,\n    fontSize: 100\n  },\n  mainButtons: {\n    width: 150,\n    backgroundColor: 'grey',\n    margin: 10,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10\n  },\n  navigationPanel: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  streamContainer: {\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  streamButtons: {\n    width: 140,\n    backgroundColor: 'black',\n    margin: 20,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10\n  },\n  userList: {\n    flexDirection: 'column',\n    width: '80%',\n    backgroundColor: 'green',\n    height: 100,\n    borderColor: 'black'\n  },\n  userName: {\n    backgroundColor: 'purple',\n    fontSize: 50\n  }\n});","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/MovieTinder/screens/SettingsScreen.js"],"names":["AsyncStorage","React","useEffect","useState","shortid","createMovieGroup","retrieveMovieListWithSelections","SettingsScreen","route","navigation","params","data","settings","setSettings","console","log","styles","mainContainer","fontSize","code","toUpperCase","users","length","userList","map","user","userId","userName","streamContainer","streamingServices","service","selectStreamingService","id","streamButtons","backgroundColor","selected","color","genres","genre","selectGenre","name","years","year","selectYear","navigationPanel","mainButtons","navigate","StyleSheet","create","flexDirection","width","alignItems","justifyContent","height","mainTitle","marginLeft","marginRight","marginTop","margin","padding","borderRadius","borderColor"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Alert, TouchableOpacity, SafeAreaView, Switch, ScrollView } from 'react-native';\nimport shortid from 'shortid';\nimport { createMovieGroup } from '../repositories/apiRepository';\nimport { retrieveMovieListWithSelections } from '../repositories/movieDbRepository';\n\nexport const SettingsScreen = ({ route, navigation }) => {\n\tconst [settings, setSettings] = useState(route.params.data);\n\n\tuseEffect(() => {\n\t\tconsole.log(111, settings);\n\t}, []);\n\n\t// const selectStreamingService = service => {\n\t// \tlet services = [...streamingServices];\n\t// \tfor (let i = 0; i < services.length; i++) {\n\t// \t\tif (services[i].id === service.id) {\n\t// \t\t\tservices[i].selected ? (services[i].selected = false) : (services[i].selected = true);\n\t// \t\t}\n\t// \t}\n\t// \tsetStreamingServices(services);\n\t// };\n\n\t// const selectGenre = genre => {\n\t// \tlet genres = [...genreList];\n\t// \tfor (let i = 0; i < genres.length; i++) {\n\t// \t\tif (genres[i].id === genre.id) {\n\t// \t\t\tgenres[i].selected ? (genres[i].selected = false) : (genres[i].selected = true);\n\t// \t\t}\n\t// \t}\n\t// \tsetGenreList(genres);\n\t// };\n\n\t// const selectYear = year => {\n\t// \tlet years = [...yearsList];\n\t// \tfor (let i = 0; i < years.length; i++) {\n\t// \t\tif (years[i].id === year.id) {\n\t// \t\t\tyears[i].selected ? (years[i].selected = false) : (years[i].selected = true);\n\t// \t\t}\n\t// \t}\n\t// \tsetYears(years);\n\t// };\n\n\t// const grabInfoForMovieGroup = async () => {\n\t// \tlet selecteStreamingServices = streamingServices.filter(service => service.selected);\n\t// \tlet selectedGenres = genreList.filter(genre => genre.selected);\n\t// \tlet selectedYears = yearsList.filter(year => year.selected);\n\t// \tlet code = await generateGropCode();\n\n\t// \tconst userSettings = await AsyncStorage.getItem('@movieTinder:userSettings');\n\t// \tlet parsedUserSettings = JSON.parse(userSettings);\n\t// \tif (!parsedUserSettings.host) {\n\t// \t\tawait AsyncStorage.setItem('@movieTinder:userSettings', JSON.stringify({ ...parsedUserSettings, host: true }));\n\t// \t}\n\n\t// \tlet storedUserObj = {\n\t// \t\tuserId: parsedUserSettings.userId,\n\t// \t\thost: true,\n\t// \t};\n\n\t// \tlet movieGroupSettings = {\n\t// \t\tusers: [{ ...storedUserObj }],\n\t// \t\tstreamingServices: selecteStreamingServices,\n\t// \t\tyears: selectedYears,\n\t// \t\tadult: adultMoviesOnly,\n\t// \t\tgenres: [...selectedGenres],\n\t// \t\tcode: code,\n\t// \t};\n\t// \t// createMovieGroup(movieGroupSettings);\n\t// \tretriveInitialData(movieGroupSettings);\n\t// };\n\n\t// const retriveInitialData = async movieGroupSettings => {\n\t// \tlet movieListObj = await retrieveMovieListWithSelections(movieGroupSettings);\n\t// \tif (movieListObj.success && movieListObj.movies.length > 0) {\n\t// \t\tconsole.log('OBJ', movieListObj);\n\t// \t\tnavigation.navigate('SwipeScreen', { movieListArray: movieListObj.movies });\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<View style={styles.mainContainer}>\n\t\t\t<Text style={{ fontSize: 50 }}>Movie Tinder</Text>\n\t\t\t<ScrollView>\n\t\t\t\t<Text style={{ fontSize: 30 }}>Join Code: {settings.code.toUpperCase()}</Text>\n\n\t\t\t\t<Text style={{ fontSize: 20 }}>Users {settings.users.length}</Text>\n\t\t\t\t<View style={styles.userList}>\n\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t{settings.users.map(user => (\n\t\t\t\t\t\t\t<View key={user.userId} style={styles.userName}>\n\t\t\t\t\t\t\t\t<Text>{user.userName}</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Streaming Services</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{settings.streamingServices.map(service => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectStreamingService(service)} key={service.id} style={{ ...styles.streamButtons, backgroundColor: service.selected ? 'green' : 'grey' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{service.service}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Genres</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{settings.genres.map(genre => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectGenre(genre)} key={genre.id} style={{ ...styles.streamButtons, backgroundColor: genre.selected ? 'green' : 'grey' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{genre.name}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Years</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{settings.years.map(year => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectYear(year)} key={year.id} style={{ ...styles.streamButtons, backgroundColor: year.selected ? 'green' : 'grey' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{year.year}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\n\t\t\t<View style={styles.navigationPanel}>\n\t\t\t\t{/* <TouchableOpacity style={styles.mainButtons} onPress={() => navigation.navigate('MainScreen')}>\n\t\t\t\t\t<Text style={{ fontSize: 15, color: '#fff' }}>Cancel</Text>\n\t\t\t\t</TouchableOpacity> */}\n\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={styles.mainButtons}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tnavigation.navigate('SwipeScreen');\n\t\t\t\t\t\t// grabInfoForMovieGroup();\n\t\t\t\t\t}}>\n\t\t\t\t\t<Text style={{ fontSize: 15, color: '#fff' }}>Go Swipe</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tmainContainer: {\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '100%',\n\t\tbackgroundColor: '#FFFFFF',\n\t},\n\tmainTitle: {\n\t\tflexDirection: 'row',\n\t\tfontSize: 0,\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t\tmarginTop: 35,\n\t\tfontSize: 100,\n\t},\n\tmainButtons: {\n\t\twidth: 150,\n\t\tbackgroundColor: 'grey',\n\t\tmargin: 10,\n\t\tpadding: 10,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t},\n\tnavigationPanel: {\n\t\twidth: '100%',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tstreamContainer: {\n\t\twidth: '100%',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tstreamButtons: {\n\t\twidth: 140,\n\t\tbackgroundColor: 'black',\n\t\tmargin: 20,\n\t\tpadding: 10,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t},\n\tuserList: {\n\t\tflexDirection: 'column',\n\t\twidth: '80%',\n\t\tbackgroundColor: 'green',\n\t\theight: 100,\n\t\tborderColor: 'black',\n\t},\n\tuserName: {\n\t\tbackgroundColor: 'purple',\n\t\tfontSize: 50,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}