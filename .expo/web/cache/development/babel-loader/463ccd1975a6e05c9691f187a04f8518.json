{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/MovieTinder/screens/SwipeScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Swiper from 'react-native-deck-swiper';\nimport { retrieveMovieListWithSelections, retrieveWatchProviders } from \"../repositories/movieDbRepository\";\nexport var SwipeScreen = function SwipeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cardsArr = _useState2[0],\n      setCardsArr = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      watchProviders = _useState4[0],\n      setWatchProviders = _useState4[1];\n\n  useEffect(function () {\n    var movieListArray = route.params.movieListArray;\n    console.log(movieListArray);\n    setCardsArr(movieListArray);\n  }, []);\n\n  var getProviders = function getProviders(movieListArray) {\n    var watchProvidersArray, i, _watchProviders;\n\n    return _regeneratorRuntime.async(function getProviders$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            watchProvidersArray = [];\n            i = 0;\n\n          case 2:\n            if (!(i < movieListArray.movies.length)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(retrieveWatchProviders(movieListArray.movies[i].id));\n\n          case 5:\n            _watchProviders = _context.sent;\n            watchProvidersArray.push(_watchProviders);\n\n          case 7:\n            i++;\n            _context.next = 2;\n            break;\n\n          case 10:\n            setWatchProviders(watchProvidersArray);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var retriveInitialData = function retriveInitialData() {\n    var movieListArray;\n    return _regeneratorRuntime.async(function retriveInitialData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(retrieveMovieListWithSelections());\n\n          case 2:\n            movieListArray = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(getProviders(movieListArray));\n\n          case 5:\n            if (movieListArray.success) {\n              setCardsArr(movieListArray.movies);\n            } else {\n              console.log(movieListArray.errorMsg);\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, cardsArr.length > 0 && React.createElement(Swiper, {\n    cards: cardsArr,\n    horizontalSwipe: false,\n    cardVerticalMargin: 5,\n    verticalThreshold: 700 / 5,\n    cardHorizontalMargin: 5,\n    backgroundColor: '#000000',\n    onSwipedTop: function onSwipedTop() {\n      return console.log('Swiped up');\n    },\n    onSwipedBottom: function onSwipedBottom() {\n      return console.log('Swiped down');\n    },\n    showSecondCard: true,\n    renderCard: function renderCard(card) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: 0,\n          borderColor: '#E8E8E8',\n          justifyContent: 'center',\n          backgroundColor: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: '90%',\n          height: '90%'\n        },\n        source: {\n          uri: \"https://image.tmdb.org/t/p/original\" + card.poster_path\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  mainContainer: {\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  buttonsContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '50%'\n  },\n  mainTitle: {\n    fontSize: 40,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 35\n  },\n  mainButtons: {\n    width: '40%',\n    backgroundColor: 'grey',\n    margin: 30,\n    padding: 20,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/MovieTinder/screens/SwipeScreen.js"],"names":["React","useState","useEffect","Swiper","retrieveMovieListWithSelections","retrieveWatchProviders","SwipeScreen","route","navigation","cardsArr","setCardsArr","watchProviders","setWatchProviders","movieListArray","params","console","log","getProviders","watchProvidersArray","i","movies","length","id","push","retriveInitialData","success","errorMsg","styles","mainContainer","card","flex","justifyContent","alignItems","borderRadius","borderColor","backgroundColor","width","height","uri","poster_path","StyleSheet","create","flexDirection","buttonsContainer","mainTitle","fontSize","marginLeft","marginRight","marginTop","mainButtons","margin","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Alert, TouchableOpacity, SafeAreaView, Image } from 'react-native';\nimport Swiper from 'react-native-deck-swiper';\nimport { retrieveMovieListWithSelections, retrieveWatchProviders } from '../repositories/movieDbRepository';\n\nexport const SwipeScreen = ({ route, navigation }) => {\n\tconst [cardsArr, setCardsArr] = useState([]);\n\tconst [watchProviders, setWatchProviders] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst { movieListArray } = route.params;\n\t\tconsole.log(movieListArray);\n\t\tsetCardsArr(movieListArray);\n\t\t\n\t}, []);\n\n\tconst getProviders = async movieListArray => {\n\t\tlet watchProvidersArray = [];\n\t\tfor (let i = 0; i < movieListArray.movies.length; i++) {\n\t\t\tlet watchProviders = await retrieveWatchProviders(movieListArray.movies[i].id);\n\t\t\twatchProvidersArray.push(watchProviders);\n\t\t}\n\t\tsetWatchProviders(watchProvidersArray);\n\t};\n\n\tconst retriveInitialData = async () => {\n\t\tlet movieListArray = await retrieveMovieListWithSelections();\n\t\tawait getProviders(movieListArray);\n\n\t\tif (movieListArray.success) {\n\t\t\tsetCardsArr(movieListArray.movies);\n\t\t} else {\n\t\t\tconsole.log(movieListArray.errorMsg);\n\t\t}\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={styles.mainContainer}>\n\t\t\t{cardsArr.length > 0 && (\n\t\t\t\t<Swiper\n\t\t\t\t\tcards={cardsArr}\n\t\t\t\t\thorizontalSwipe={false}\n\t\t\t\t\tcardVerticalMargin={5}\n\t\t\t\t\tverticalThreshold={700 / 5}\n\t\t\t\t\tcardHorizontalMargin={5}\n\t\t\t\t\tbackgroundColor={'#000000'}\n\t\t\t\t\tonSwipedTop={() => console.log('Swiped up')}\n\t\t\t\t\tonSwipedBottom={() => console.log('Swiped down')}\n\t\t\t\t\tshowSecondCard={true}\n\t\t\t\t\trenderCard={card => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\t\t\t\tborderColor: '#E8E8E8',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Image style={{ width: '90%', height: '90%' }} source={{ uri: `https://image.tmdb.org/t/p/original${card.poster_path}` }} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</SafeAreaView>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tmainContainer: {\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t},\n\tbuttonsContainer: {\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '50%',\n\t},\n\tmainTitle: {\n\t\tfontSize: 40,\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t\tmarginTop: 35,\n\t},\n\tmainButtons: {\n\t\twidth: '40%',\n\t\tbackgroundColor: 'grey',\n\t\tmargin: 30,\n\t\tpadding: 20,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}