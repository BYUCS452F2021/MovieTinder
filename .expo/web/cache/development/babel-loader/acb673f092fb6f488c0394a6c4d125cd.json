{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/MovieTinder/screens/HostScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-community/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport shortid from 'shortid';\nimport { LoadingOverlay } from \"../components/LoadingOverlay\";\nimport { createMovieGroup } from \"../repositories/apiRepository\";\nimport { retrieveMovieListWithSelections } from \"../repositories/movieDbRepository\";\nexport var HostScreen = function HostScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(route.params.genreList),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreList = _useState2[0],\n      setGenreList = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    name: 'Daddy',\n    host: false\n  }, {\n    id: 2,\n    name: 'Ammon',\n    host: true\n  }, {\n    id: 3,\n    name: 'Spencer',\n    host: false\n  }, {\n    id: 4,\n    name: 'jon',\n    host: false\n  }, {\n    id: 5,\n    name: 'tom',\n    host: false\n  }, {\n    id: 6,\n    name: 'carl',\n    host: false\n  }, {\n    id: 7,\n    name: 'mommy',\n    host: false\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState([{\n    id: 1,\n    service: 'Netflix',\n    selected: false\n  }, {\n    id: 2,\n    service: 'Hulu',\n    selected: false\n  }, {\n    id: 3,\n    service: 'Disney Plus',\n    selected: false\n  }, {\n    id: 4,\n    service: 'Amazon Prime',\n    selected: false\n  }, {\n    id: 5,\n    service: 'HBO Max',\n    selected: false\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      streamingServices = _useState6[0],\n      setStreamingServices = _useState6[1];\n\n  var _useState7 = useState([{\n    id: 1,\n    year: '2020-Present',\n    selected: false\n  }, {\n    id: 2,\n    year: '2010-2019',\n    selected: false\n  }, {\n    id: 3,\n    year: '2000-2009',\n    selected: false\n  }, {\n    id: 4,\n    year: '1990-1999',\n    selected: false\n  }, {\n    id: 5,\n    year: 'All',\n    selected: false\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      yearsList = _useState8[0],\n      setYears = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loadingOverlay = _useState10[0],\n      setLoadingOverlay = _useState10[1];\n\n  var generateGropCode = function generateGropCode() {\n    return _regeneratorRuntime.async(function generateGropCode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            shortid.characters('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ?!');\n            return _context.abrupt(\"return\", shortid.generate().slice(0, -3).toLocaleLowerCase());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var selectStreamingService = function selectStreamingService(service) {\n    var services = _toConsumableArray(streamingServices);\n\n    for (var i = 0; i < services.length; i++) {\n      if (services[i].id === service.id) {\n        services[i].selected ? services[i].selected = false : services[i].selected = true;\n      }\n    }\n\n    setStreamingServices(services);\n  };\n\n  var selectGenre = function selectGenre(genre) {\n    var genres = _toConsumableArray(genreList);\n\n    for (var i = 0; i < genres.length; i++) {\n      if (genres[i].id === genre.id) {\n        genres[i].selected ? genres[i].selected = false : genres[i].selected = true;\n      }\n    }\n\n    setGenreList(genres);\n  };\n\n  var selectYear = function selectYear(year) {\n    var years = _toConsumableArray(yearsList);\n\n    for (var i = 0; i < years.length; i++) {\n      if (years[i].id === year.id) {\n        years[i].selected ? years[i].selected = false : years[i].selected = true;\n      }\n    }\n\n    setYears(years);\n  };\n\n  var grabInfoForMovieGroup = function grabInfoForMovieGroup() {\n    var selecteStreamingServices, selectedGenres, selectedYears, code, userSettings, parsedUserSettings, storedUserObj, movieGroupSettings;\n    return _regeneratorRuntime.async(function grabInfoForMovieGroup$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            selecteStreamingServices = streamingServices.filter(function (service) {\n              return service.selected;\n            });\n            selectedGenres = genreList.filter(function (genre) {\n              return genre.selected;\n            });\n            selectedYears = yearsList.filter(function (year) {\n              return year.selected;\n            });\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(generateGropCode());\n\n          case 5:\n            code = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@movieTinder:userSettings'));\n\n          case 8:\n            userSettings = _context2.sent;\n            parsedUserSettings = JSON.parse(userSettings);\n\n            if (parsedUserSettings.host) {\n              _context2.next = 13;\n              break;\n            }\n\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@movieTinder:userSettings', JSON.stringify(_objectSpread(_objectSpread({}, parsedUserSettings), {}, {\n              host: true\n            }))));\n\n          case 13:\n            storedUserObj = {\n              userId: parsedUserSettings.userId,\n              host: true,\n              userName: 'Billy'\n            };\n            movieGroupSettings = {\n              users: [_objectSpread({}, storedUserObj)],\n              streamingServices: selecteStreamingServices,\n              years: selectedYears,\n              genres: _toConsumableArray(selectedGenres),\n              code: code\n            };\n            createMovieGroup(movieGroupSettings);\n            retriveInitialData(movieGroupSettings);\n            navigation.navigate('SettingsScreen', {\n              data: movieGroupSettings\n            });\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var retriveInitialData = function retriveInitialData(movieGroupSettings) {\n    var movieListObj;\n    return _regeneratorRuntime.async(function retriveInitialData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(retrieveMovieListWithSelections(movieGroupSettings));\n\n          case 2:\n            movieListObj = _context3.sent;\n\n            if (movieListObj.success && movieListObj.movies.length > 0) {\n              navigation.navigate('SwipeScreen', {\n                movieListArray: movieListObj.movies\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, \"Movie Tinder\"), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  }, \"Streaming Services\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  }, streamingServices.map(function (service) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectStreamingService(service);\n      },\n      key: service.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: service.selected ? 'green' : 'grey'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, service.service));\n  }))), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }\n  }, \"Genres\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  }, genreList.map(function (genre) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectGenre(genre);\n      },\n      key: genre.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: genre.selected ? 'green' : 'grey'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, genre.name));\n  }))), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 6\n    }\n  }, \"Years\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 6\n    }\n  }, yearsList.map(function (year) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectYear(year);\n      },\n      key: year.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: year.selected ? 'green' : 'grey'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, year.year));\n  })))), React.createElement(View, {\n    style: styles.navigationPanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.mainButtons,\n    onPress: function onPress() {\n      return navigation.navigate('MainScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 6\n    }\n  }, \"Cancel\")), React.createElement(TouchableOpacity, {\n    style: styles.mainButtons,\n    onPress: function onPress() {\n      grabInfoForMovieGroup();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 6\n    }\n  }, \"Create Group\"))), React.createElement(LoadingOverlay, {\n    visible: loadingOverlay,\n    toggleFunc: function toggleFunc() {\n      return setLoadingOverlay(!loadingOverlay);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    backgroundColor: '#FFFFFF'\n  },\n  mainTitle: {\n    flexDirection: 'row',\n    fontSize: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 35,\n    fontSize: 100\n  },\n  mainButtons: {\n    width: 150,\n    backgroundColor: 'grey',\n    margin: 10,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10\n  },\n  navigationPanel: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  streamContainer: {\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  streamButtons: {\n    width: 140,\n    backgroundColor: 'black',\n    margin: 20,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10\n  },\n  userList: {\n    flexDirection: 'column',\n    width: '80%',\n    backgroundColor: 'green',\n    height: 100,\n    borderColor: 'black'\n  },\n  userName: {\n    backgroundColor: 'purple',\n    fontSize: 50\n  }\n});","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/MovieTinder/screens/HostScreen.js"],"names":["AsyncStorage","React","useEffect","useState","shortid","LoadingOverlay","createMovieGroup","retrieveMovieListWithSelections","HostScreen","route","navigation","params","genreList","setGenreList","id","name","host","users","setUsers","service","selected","streamingServices","setStreamingServices","year","yearsList","setYears","loadingOverlay","setLoadingOverlay","generateGropCode","characters","generate","slice","toLocaleLowerCase","selectStreamingService","services","i","length","selectGenre","genre","genres","selectYear","years","grabInfoForMovieGroup","selecteStreamingServices","filter","selectedGenres","selectedYears","code","getItem","userSettings","parsedUserSettings","JSON","parse","setItem","stringify","storedUserObj","userId","userName","movieGroupSettings","retriveInitialData","navigate","data","movieListObj","success","movies","movieListArray","styles","mainContainer","fontSize","streamContainer","map","streamButtons","backgroundColor","color","navigationPanel","mainButtons","StyleSheet","create","flexDirection","width","alignItems","justifyContent","height","mainTitle","marginLeft","marginRight","marginTop","margin","padding","borderRadius","userList","borderColor"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Alert, TouchableOpacity, SafeAreaView, Switch, ScrollView } from 'react-native';\nimport shortid from 'shortid';\nimport { LoadingOverlay } from '../components/LoadingOverlay';\nimport { createMovieGroup } from '../repositories/apiRepository';\nimport { retrieveMovieListWithSelections } from '../repositories/movieDbRepository';\n\nexport const HostScreen = ({ route, navigation }) => {\n\n\tconst [genreList, setGenreList] = useState(route.params.genreList);\n\tconst [users, setUsers] = useState([\n\t\t{ id: 1, name: 'Daddy', host: false },\n\t\t{ id: 2, name: 'Ammon', host: true },\n\t\t{ id: 3, name: 'Spencer', host: false },\n\t\t{ id: 4, name: 'jon', host: false },\n\t\t{ id: 5, name: 'tom', host: false },\n\t\t{ id: 6, name: 'carl', host: false },\n\t\t{ id: 7, name: 'mommy', host: false },\n\t]);\n\t\n\tconst [streamingServices, setStreamingServices] = useState([\n\t\t{ id: 1, service: 'Netflix', selected: false },\n\t\t{ id: 2, service: 'Hulu', selected: false },\n\t\t{ id: 3, service: 'Disney Plus', selected: false },\n\t\t{ id: 4, service: 'Amazon Prime', selected: false },\n\t\t{ id: 5, service: 'HBO Max', selected: false },\n\t]);\n\tconst [yearsList, setYears] = useState([\n\t\t{ id: 1, year: '2020-Present', selected: false },\n\t\t{ id: 2, year: '2010-2019', selected: false },\n\t\t{ id: 3, year: '2000-2009', selected: false },\n\t\t{ id: 4, year: '1990-1999', selected: false },\n\t\t{ id: 5, year: 'All', selected: false },\n\t]);\n\tconst [loadingOverlay, setLoadingOverlay] = useState(false);\n\n\tconst generateGropCode = async () => {\n\t\tshortid.characters('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ?!');\n\t\treturn shortid.generate().slice(0, -3).toLocaleLowerCase();\n\t};\n\n\tconst selectStreamingService = service => {\n\t\tlet services = [...streamingServices];\n\t\tfor (let i = 0; i < services.length; i++) {\n\t\t\tif (services[i].id === service.id) {\n\t\t\t\tservices[i].selected ? (services[i].selected = false) : (services[i].selected = true);\n\t\t\t}\n\t\t}\n\t\tsetStreamingServices(services);\n\t};\n\n\tconst selectGenre = genre => {\n\t\tlet genres = [...genreList];\n\t\tfor (let i = 0; i < genres.length; i++) {\n\t\t\tif (genres[i].id === genre.id) {\n\t\t\t\tgenres[i].selected ? (genres[i].selected = false) : (genres[i].selected = true);\n\t\t\t}\n\t\t}\n\t\tsetGenreList(genres);\n\t};\n\n\tconst selectYear = year => {\n\t\tlet years = [...yearsList];\n\t\tfor (let i = 0; i < years.length; i++) {\n\t\t\tif (years[i].id === year.id) {\n\t\t\t\tyears[i].selected ? (years[i].selected = false) : (years[i].selected = true);\n\t\t\t}\n\t\t}\n\t\tsetYears(years);\n\t};\n\n\tconst grabInfoForMovieGroup = async () => {\n\t\tlet selecteStreamingServices = streamingServices.filter(service => service.selected);\n\t\tlet selectedGenres = genreList.filter(genre => genre.selected);\n\t\tlet selectedYears = yearsList.filter(year => year.selected);\n\t\tlet code = await generateGropCode();\n\n\t\tconst userSettings = await AsyncStorage.getItem('@movieTinder:userSettings');\n\t\tlet parsedUserSettings = JSON.parse(userSettings);\n\t\tif (!parsedUserSettings.host) {\n\t\t\tawait AsyncStorage.setItem('@movieTinder:userSettings', JSON.stringify({ ...parsedUserSettings, host: true }));\n\t\t}\n\n\t\tlet storedUserObj = {\n\t\t\tuserId: parsedUserSettings.userId,\n\t\t\thost: true,\n\t\t\tuserName: 'Billy',\n\t\t};\n\n\t\tlet movieGroupSettings = {\n\t\t\tusers: [{ ...storedUserObj }],\n\t\t\tstreamingServices: selecteStreamingServices,\n\t\t\tyears: selectedYears,\n\t\t\tgenres: [...selectedGenres],\n\t\t\tcode: code,\n\t\t};\n\t\tcreateMovieGroup(movieGroupSettings);\n\t\tretriveInitialData(movieGroupSettings);\n\t\tnavigation.navigate('SettingsScreen', { data: movieGroupSettings });\n\t};\n\n\tconst retriveInitialData = async movieGroupSettings => {\n\t\tlet movieListObj = await retrieveMovieListWithSelections(movieGroupSettings);\n\t\tif (movieListObj.success && movieListObj.movies.length > 0) {\n\t\t\t//console.log('OBJ', movieListObj);\n\t\t\tnavigation.navigate('SwipeScreen', { movieListArray: movieListObj.movies });\n\t\t\t//navigation.navigate('SettingsScreen');\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.mainContainer}>\n\t\t\t<Text style={{ fontSize: 50 }}>Movie Tinder</Text>\n\t\t\t<ScrollView>\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Streaming Services</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{streamingServices.map(service => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectStreamingService(service)} key={service.id} style={{ ...styles.streamButtons, backgroundColor: service.selected ? 'green' : 'grey' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{service.service}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Genres</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{genreList.map(genre => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectGenre(genre)} key={genre.id} style={{ ...styles.streamButtons, backgroundColor: genre.selected ? 'green' : 'grey' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{genre.name}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Years</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{yearsList.map(year => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectYear(year)} key={year.id} style={{ ...styles.streamButtons, backgroundColor: year.selected ? 'green' : 'grey' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{year.year}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\n\t\t\t<View style={styles.navigationPanel}>\n\t\t\t\t<TouchableOpacity style={styles.mainButtons} onPress={() => navigation.navigate('MainScreen')}>\n\t\t\t\t\t<Text style={{ fontSize: 15, color: '#fff' }}>Cancel</Text>\n\t\t\t\t</TouchableOpacity>\n\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={styles.mainButtons}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tgrabInfoForMovieGroup();\n\t\t\t\t\t}}>\n\t\t\t\t\t<Text style={{ fontSize: 15, color: '#fff' }}>Create Group</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t\t<LoadingOverlay visible={loadingOverlay} toggleFunc={() => setLoadingOverlay(!loadingOverlay)} />\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tmainContainer: {\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '100%',\n\t\tbackgroundColor: '#FFFFFF',\n\t},\n\tmainTitle: {\n\t\tflexDirection: 'row',\n\t\tfontSize: 0,\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t\tmarginTop: 35,\n\t\tfontSize: 100,\n\t},\n\tmainButtons: {\n\t\twidth: 150,\n\t\tbackgroundColor: 'grey',\n\t\tmargin: 10,\n\t\tpadding: 10,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t},\n\tnavigationPanel: {\n\t\twidth: '100%',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t},\n\tstreamContainer: {\n\t\twidth: '100%',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tstreamButtons: {\n\t\twidth: 140,\n\t\tbackgroundColor: 'black',\n\t\tmargin: 20,\n\t\tpadding: 10,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t},\n\tuserList: {\n\t\tflexDirection: 'column',\n\t\twidth: '80%',\n\t\tbackgroundColor: 'green',\n\t\theight: 100,\n\t\tborderColor: 'black',\n\t},\n\tuserName: {\n\t\tbackgroundColor: 'purple',\n\t\tfontSize: 50,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}