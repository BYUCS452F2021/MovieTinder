{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/MovieTinder/screens/JoinScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-community/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { greaterThan } from 'react-native-reanimated';\nimport { checkGroupCode, createMovieGroup } from \"../repositories/apiRepository\";\nimport { retrieveMovieListWithSelections } from \"../repositories/movieDbRepository\";\nexport var JoinScreen = function JoinScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreList = _useState2[0],\n      setGenreList = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    name: 'Daddy',\n    host: false\n  }, {\n    id: 2,\n    name: 'Ammon',\n    host: true\n  }, {\n    id: 3,\n    name: 'Spencer',\n    host: false\n  }, {\n    id: 4,\n    name: 'jon',\n    host: false\n  }, {\n    id: 5,\n    name: 'tom',\n    host: false\n  }, {\n    id: 6,\n    name: 'carl',\n    host: false\n  }, {\n    id: 7,\n    name: 'mommy',\n    host: false\n  }, {\n    id: 8,\n    name: 'dingus',\n    host: false\n  }, {\n    id: 9,\n    name: 'nugget',\n    host: false\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState([{\n    id: 1,\n    year: '2020-Present',\n    selected: false\n  }, {\n    id: 2,\n    year: '2010-2019',\n    selected: false\n  }, {\n    id: 3,\n    year: '2000-2009',\n    selected: false\n  }, {\n    id: 4,\n    year: '1990-1999',\n    selected: false\n  }, {\n    id: 5,\n    year: 'All',\n    selected: false\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      yearsList = _useState6[0],\n      setYears = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      adultMoviesOnly = _useState8[0],\n      setAdultMoviesOnly = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      groupCode = _useState10[0],\n      setGroupCode = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userName = _useState12[0],\n      setUserName = _useState12[1];\n\n  useEffect(function () {\n    var genreList = route.params.genreList;\n    setGenreList(genreList);\n  }, []);\n\n  var selectStreamingService = function selectStreamingService(service) {\n    var services = _toConsumableArray(streamingServices);\n\n    for (var i = 0; i < services.length; i++) {\n      if (services[i].id === service.id) {\n        services[i].selected ? services[i].selected = false : services[i].selected = true;\n      }\n    }\n\n    setStreamingServices(services);\n  };\n\n  var selectGenre = function selectGenre(genre) {\n    var genres = _toConsumableArray(genreList);\n\n    for (var i = 0; i < genres.length; i++) {\n      if (genres[i].id === genre.id) {\n        genres[i].selected ? genres[i].selected = false : genres[i].selected = true;\n      }\n    }\n\n    setGenreList(genres);\n  };\n\n  var selectYear = function selectYear(year) {\n    var years = _toConsumableArray(yearsList);\n\n    for (var i = 0; i < years.length; i++) {\n      if (years[i].id === year.id) {\n        years[i].selected ? years[i].selected = false : years[i].selected = true;\n      }\n    }\n\n    setYears(years);\n  };\n\n  var grabInfoForMovieGroup = function grabInfoForMovieGroup() {\n    var errorMessage = '';\n\n    try {\n      if (groupCode.length == 6) {\n        if (checkGroupCode() == groupCode) {\n          navigation.navigate('WaitScreen');\n        }\n      } else {\n        errorMessage = 'Code needs to be 6 characters';\n        throw errorMessage;\n      }\n    } catch (error) {\n      Alert.alert(errorMessage);\n    }\n  };\n\n  var retriveInitialData = function retriveInitialData(movieGroupSettings) {\n    var movieListObj;\n    return _regeneratorRuntime.async(function retriveInitialData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(retrieveMovieListWithSelections(movieGroupSettings));\n\n          case 2:\n            movieListObj = _context.sent;\n\n            if (movieListObj.success && movieListObj.movies.length > 0) {\n              navigation.navigate('SwipeScreen', {\n                movieListArray: movieListObj.movies\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 50,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, \"Movie Tinder\"), React.createElement(View, _extends({\n    style: styles.codeInput\n  }, {\n    justifyContent: 'flex-start'\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Join Code:\"), React.createElement(TextInput, {\n    placeholder: \"Code\",\n    placeholderTextColor: \"grey\",\n    autoCapitalize: \"none\",\n    maxLength: \"6\",\n    onChangeText: function onChangeText(text) {\n      return setGroupCode(text);\n    },\n    value: groupCode,\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.codeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, \"Name:\"), React.createElement(TextInput, {\n    placeholder: \"Billy\",\n    placeholderTextColor: \"grey\",\n    autoCapitalize: \"none\",\n    maxLength: \"20\",\n    onChangeText: function onChangeText(text) {\n      return setUserName(text);\n    },\n    value: userName,\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 6\n    }\n  }, \"Genres\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }\n  }, genreList.map(function (genre) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectGenre(genre);\n      },\n      key: genre.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: genre.selected ? 'green' : 'white'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, genre.name));\n  }))), React.createElement(View, {\n    style: styles.streamContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 6\n    }\n  }, \"Years\"), React.createElement(ScrollView, {\n    horizontal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 6\n    }\n  }, yearsList.map(function (year) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return selectYear(year);\n      },\n      key: year.id,\n      style: _objectSpread(_objectSpread({}, styles.streamButtons), {}, {\n        backgroundColor: year.selected ? 'green' : 'white'\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: 'black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, year.year));\n  }))), React.createElement(View, {\n    style: styles.navigationPanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.mainButtons,\n    onPress: function onPress() {\n      return navigation.navigate('MainScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, \"Cancel\")), React.createElement(TouchableOpacity, {\n    style: styles.mainButtons,\n    onPress: function onPress() {\n      grabInfoForMovieGroup();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }, \"Create Group\"))));\n};\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    backgroundColor: '#FFFFFF'\n  },\n  mainTitle: {\n    flexDirection: 'row',\n    fontSize: 0,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 35,\n    marginBottom: 40,\n    fontSize: 100\n  },\n  mainButtons: {\n    width: 150,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10,\n    borderColor: 'black',\n    borderWidth: 2\n  },\n  navigationPanel: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  streamContainer: {\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  streamButtons: {\n    width: 140,\n    backgroundColor: 'black',\n    margin: 20,\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 10,\n    borderColor: 'black',\n    borderWidth: 2\n  },\n  userList: {\n    flexDirection: 'column',\n    width: '80%',\n    backgroundColor: 'green',\n    height: 100,\n    borderColor: 'black'\n  },\n  userName: {\n    backgroundColor: 'purple',\n    fontSize: 50\n  },\n  codeInput: {\n    marginBottom: 50,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  inputBox: {\n    borderWidth: 1.5,\n    borderColor: 'black',\n    width: '30%',\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/MovieTinder/screens/JoinScreen.js"],"names":["AsyncStorage","React","useEffect","useState","greaterThan","checkGroupCode","createMovieGroup","retrieveMovieListWithSelections","JoinScreen","route","navigation","genreList","setGenreList","id","name","host","users","setUsers","year","selected","yearsList","setYears","adultMoviesOnly","setAdultMoviesOnly","groupCode","setGroupCode","userName","setUserName","params","selectStreamingService","service","services","streamingServices","i","length","setStreamingServices","selectGenre","genre","genres","selectYear","years","grabInfoForMovieGroup","errorMessage","navigate","error","Alert","alert","retriveInitialData","movieGroupSettings","movieListObj","success","movies","movieListArray","styles","mainContainer","fontSize","marginBottom","codeInput","justifyContent","text","inputBox","streamContainer","map","streamButtons","backgroundColor","color","navigationPanel","mainButtons","StyleSheet","create","flexDirection","width","alignItems","height","mainTitle","marginLeft","marginRight","marginTop","margin","padding","borderRadius","borderColor","borderWidth","userList"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Alert, TouchableOpacity, SafeAreaView, Switch, ScrollView, TextInput } from 'react-native';\nimport { greaterThan } from 'react-native-reanimated';\nimport { checkGroupCode, createMovieGroup } from '../repositories/apiRepository';\nimport { retrieveMovieListWithSelections } from '../repositories/movieDbRepository';\n\nexport const JoinScreen = ({ route, navigation }) => {\n\tconst [genreList, setGenreList] = useState([]);\n\tconst [users, setUsers] = useState([\n\t\t{ id: 1, name: 'Daddy', host: false },\n\t\t{ id: 2, name: 'Ammon', host: true },\n\t\t{ id: 3, name: 'Spencer', host: false },\n\t\t{ id: 4, name: 'jon', host: false },\n\t\t{ id: 5, name: 'tom', host: false },\n\t\t{ id: 6, name: 'carl', host: false },\n\t\t{ id: 7, name: 'mommy', host: false },\n\t\t{ id: 8, name: 'dingus', host: false },\n\t\t{ id: 9, name: 'nugget', host: false },\n\t]);\n\tconst [yearsList, setYears] = useState([\n\t\t{ id: 1, year: '2020-Present', selected: false },\n\t\t{ id: 2, year: '2010-2019', selected: false },\n\t\t{ id: 3, year: '2000-2009', selected: false },\n\t\t{ id: 4, year: '1990-1999', selected: false },\n\t\t{ id: 5, year: 'All', selected: false },\n\t]);\n\tconst [adultMoviesOnly, setAdultMoviesOnly] = useState(false);\n\tconst [groupCode, setGroupCode] = useState('');\n\tconst [userName, setUserName] = useState('');\n\n\tuseEffect(() => {\n\t\tconst { genreList } = route.params;\n\t\tsetGenreList(genreList);\n\t}, []);\n\n\tconst selectStreamingService = service => {\n\t\tlet services = [...streamingServices];\n\t\tfor (let i = 0; i < services.length; i++) {\n\t\t\tif (services[i].id === service.id) {\n\t\t\t\tservices[i].selected ? (services[i].selected = false) : (services[i].selected = true);\n\t\t\t}\n\t\t}\n\t\tsetStreamingServices(services);\n\t};\n\n\tconst selectGenre = genre => {\n\t\tlet genres = [...genreList];\n\t\tfor (let i = 0; i < genres.length; i++) {\n\t\t\tif (genres[i].id === genre.id) {\n\t\t\t\tgenres[i].selected ? (genres[i].selected = false) : (genres[i].selected = true);\n\t\t\t}\n\t\t}\n\t\tsetGenreList(genres);\n\t};\n\n\tconst selectYear = year => {\n\t\tlet years = [...yearsList];\n\t\tfor (let i = 0; i < years.length; i++) {\n\t\t\tif (years[i].id === year.id) {\n\t\t\t\tyears[i].selected ? (years[i].selected = false) : (years[i].selected = true);\n\t\t\t}\n\t\t}\n\t\tsetYears(years);\n\t};\n\n\tconst grabInfoForMovieGroup = () => {\n\t\t//check code length\n\t\tlet errorMessage = '';\n\t\ttry {\n\t\t\tif(groupCode.length == 6){\n\t\t\t\t//then check if code is in the database\n\t\t\t\tif(checkGroupCode() == groupCode){\n\t\t\t\t\tnavigation.navigate('WaitScreen');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\terrorMessage = 'Code needs to be 6 characters';\n\t\t\t\tthrow errorMessage;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tAlert.alert(errorMessage);\n\t\t}\n\t};\n\n\tconst retriveInitialData = async movieGroupSettings => {\n\t\tlet movieListObj = await retrieveMovieListWithSelections(movieGroupSettings);\n\t\tif (movieListObj.success && movieListObj.movies.length > 0) {\n\t\t\tnavigation.navigate('SwipeScreen', { movieListArray: movieListObj.movies });\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.mainContainer}>\n\t\t\t<Text style={{ fontSize: 50, marginBottom: 20}}>Movie Tinder</Text>\n\t\t\t<View style={styles.codeInput} {...{justifyContent: 'flex-start'}}>\n\t\t\t\t\t<Text style={{ fontSize: 30}}>Join Code:</Text>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tplaceholder = \"Code\"\n\t\t\t\t\t\tplaceholderTextColor = \"grey\"\n\t\t\t\t\t\tautoCapitalize = \"none\"\n\t\t\t\t\t\tmaxLength = '6'\n\t\t\t\t\t\tonChangeText={text => setGroupCode(text)}\n\t\t\t\t\t\tvalue={groupCode}\n\t\t\t\t\t\tstyle={styles.inputBox}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.codeInput}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Name:</Text>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tplaceholder = \"Billy\"\n\t\t\t\t\t\tplaceholderTextColor = \"grey\"\n\t\t\t\t\t\tautoCapitalize = \"none\"\n\t\t\t\t\t\tmaxLength = '20'\n\t\t\t\t\t\tonChangeText={text => setUserName(text)}\n\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\tstyle={styles.inputBox}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Genres</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{genreList.map(genre => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectGenre(genre)} key={genre.id} style={{ ...styles.streamButtons, backgroundColor: genre.selected ? 'green' : 'white' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{genre.name}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={styles.streamContainer}>\n\t\t\t\t\t<Text style={{ fontSize: 30 }}>Years</Text>\n\t\t\t\t\t<ScrollView horizontal={true}>\n\t\t\t\t\t\t{yearsList.map(year => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectYear(year)} key={year.id} style={{ ...styles.streamButtons, backgroundColor: year.selected ? 'green' : 'white' }}>\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>{year.year}</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\n\t\t\t<View style={styles.navigationPanel}>\n\t\t\t\t<TouchableOpacity style={styles.mainButtons} onPress={() => navigation.navigate('MainScreen')}>\n\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>Cancel</Text>\n\t\t\t\t</TouchableOpacity>\n\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={styles.mainButtons}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tgrabInfoForMovieGroup();\n\t\t\t\t\t}}>\n\t\t\t\t\t<Text style={{ fontSize: 15, color: 'black' }}>Create Group</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tmainContainer: {\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '100%',\n\t\tbackgroundColor: '#FFFFFF',\n\t},\n\tmainTitle: {\n\t\tflexDirection: 'row',\n\t\tfontSize: 0,\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t\tmarginTop: 35,\n\t\tmarginBottom: 40,\n\t\tfontSize: 100,\n\t},\n\tmainButtons: {\n\t\twidth: 150,\n\t\tbackgroundColor: 'white',\n\t\tmargin: 10,\n\t\tpadding: 10,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t\tborderColor: 'black',\n\t\tborderWidth: 2,\n\t},\n\tnavigationPanel: {\n\t\twidth: '100%',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t},\n\tstreamContainer: {\n\t\twidth: '100%',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tstreamButtons: {\n\t\twidth: 140,\n\t\tbackgroundColor: 'black',\n\t\tmargin: 20,\n\t\tpadding: 10,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t\tborderColor: 'black',\n\t\tborderWidth: 2,\n\t},\n\tuserList: {\n\t\tflexDirection: 'column',\n\t\twidth: '80%',\n\t\tbackgroundColor: 'green',\n\t\theight: 100,\n\t\tborderColor: 'black',\n\t},\n\tuserName: {\n\t\tbackgroundColor: 'purple',\n\t\tfontSize: 50,\n\t},\n\tcodeInput: {\n\t\tmarginBottom: 50,\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tinputBox: {\n\t\tborderWidth: 1.5,\n\t\tborderColor: 'black',\n\t\twidth: '30%',\n\t\tmarginLeft: 10,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}