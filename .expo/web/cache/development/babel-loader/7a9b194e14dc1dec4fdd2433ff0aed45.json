{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar createMovieGroup = function createMovieGroup(groupSettings) {\n  return _regeneratorRuntime.async(function createMovieGroup$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(process && process.env && process.env.EXPO_IP || \"192.168.0.100\");\n          console.log('hitt', \"http://\" + (process && process.env && process.env.EXPO_IP || \"192.168.0.100\") + \":8000/createMovieGroup\", groupSettings);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"http://\" + (process && process.env && process.env.EXPO_IP || \"192.168.0.100\") + \":8000/createMovieGroup\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(groupSettings)\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log('Success:', data);\n          }));\n\n        case 5:\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 7]], Promise);\n};\n\nvar checkGroupCode = function checkGroupCode(groupCode) {\n  return _regeneratorRuntime.async(function checkGroupCode$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('hitt', \"http://\" + (process && process.env && process.env.EXPO_IP || \"192.168.0.100\") + \":8000/getCollectionByCode\", groupCode);\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"http://\" + (process && process.env && process.env.EXPO_IP || \"192.168.0.100\") + \":8000/getCollectionByCode\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(groupCode)\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log('Success:', data);\n          }));\n\n        case 4:\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\n\nexport { createMovieGroup, checkGroupCode };","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/MovieTinder/repositories/apiRepository.js"],"names":["createMovieGroup","groupSettings","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","checkGroupCode","groupCode"],"mappings":";;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,aAAP;AAAA;AAAA;AAAA;AAAA;AACxBC,UAAAA,OAAO,CAACC,GAAR;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,6GAA2EF,aAA3E;AAFwB;AAAA;AAAA,2CAIjBG,KAAK,4GAAwD;AAClEC,YAAAA,MAAM,EAAE,MAD0D;AAElEC,YAAAA,OAAO,EAAE;AACR,8BAAgB;AADR,aAFyD;AAKlEC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,aAAf;AAL4D,WAAxD,CAAL,CAOJS,IAPI,CAOC,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WAPT,EAQJF,IARI,CAQC,UAAAG,IAAI,EAAI;AACbX,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,IAAxB;AACA,WAVI,CAJiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBvBX,UAAAA,OAAO,CAACC,GAAR;;AAhBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAoBA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AACtBb,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,gHAA8EY,SAA9E;AADsB;AAAA;AAAA,2CAGfX,KAAK,+GAA2D;AACrEC,YAAAA,MAAM,EAAE,KAD6D;AAErEC,YAAAA,OAAO,EAAE;AACR,8BAAgB;AADR,aAF4D;AAKrEC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,SAAf;AAL+D,WAA3D,CAAL,CAOJL,IAPI,CAOC,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WAPT,EAQJF,IARI,CAQC,UAAAG,IAAI,EAAI;AACbX,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,IAAxB;AACA,WAVI,CAHe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAerBX,UAAAA,OAAO,CAACC,GAAR;;AAfqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAoBA,SAASH,gBAAT,EAA2Bc,cAA3B","sourcesContent":["const createMovieGroup = async (groupSettings) => {\n\tconsole.log(process.env.EXPO_IP)\n\tconsole.log('hitt', `http://${process.env.EXPO_IP}:8000/createMovieGroup`, groupSettings)\n\ttry {\n\t\tawait fetch(`http://${process.env.EXPO_IP}:8000/createMovieGroup`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(groupSettings),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t});\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nconst checkGroupCode = async (groupCode) => {\n\tconsole.log('hitt', `http://${process.env.EXPO_IP}:8000/getCollectionByCode`, groupCode)\n\ttry {\n\t\tawait fetch(`http://${process.env.EXPO_IP}:8000/getCollectionByCode`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(groupCode),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Success:', data);\n\t\t\t});\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\n\nexport { createMovieGroup, checkGroupCode };\n"]},"metadata":{},"sourceType":"module"}